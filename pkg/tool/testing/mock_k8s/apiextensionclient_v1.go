// Code generated by MockGen. DO NOT EDIT.
// Source: k8s.io/apiextensions-apiserver/pkg/client/clientset/clientset/typed/apiextensions/v1 (interfaces: ApiextensionsV1Interface,CustomResourceDefinitionInterface)
//
// Generated by this command:
//
//	mockgen -typed -destination apiextensionclient_v1.go -package mock_k8s k8s.io/apiextensions-apiserver/pkg/client/clientset/clientset/typed/apiextensions/v1 ApiextensionsV1Interface,CustomResourceDefinitionInterface
//
// Package mock_k8s is a generated GoMock package.
package mock_k8s

import (
	"context"
	"reflect"

	"go.uber.org/mock/gomock"
	v1 "k8s.io/apiextensions-apiserver/pkg/apis/apiextensions/v1"
	v10 "k8s.io/apiextensions-apiserver/pkg/client/applyconfiguration/apiextensions/v1"
	v11 "k8s.io/apiextensions-apiserver/pkg/client/clientset/clientset/typed/apiextensions/v1"
	v12 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/types"
	"k8s.io/apimachinery/pkg/watch"
	"k8s.io/client-go/rest"
)

// MockApiextensionsV1Interface is a mock of ApiextensionsV1Interface interface.
type MockApiextensionsV1Interface struct {
	ctrl     *gomock.Controller
	recorder *MockApiextensionsV1InterfaceMockRecorder
}

// MockApiextensionsV1InterfaceMockRecorder is the mock recorder for MockApiextensionsV1Interface.
type MockApiextensionsV1InterfaceMockRecorder struct {
	mock *MockApiextensionsV1Interface
}

// NewMockApiextensionsV1Interface creates a new mock instance.
func NewMockApiextensionsV1Interface(ctrl *gomock.Controller) *MockApiextensionsV1Interface {
	mock := &MockApiextensionsV1Interface{ctrl: ctrl}
	mock.recorder = &MockApiextensionsV1InterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockApiextensionsV1Interface) EXPECT() *MockApiextensionsV1InterfaceMockRecorder {
	return m.recorder
}

// CustomResourceDefinitions mocks base method.
func (m *MockApiextensionsV1Interface) CustomResourceDefinitions() v11.CustomResourceDefinitionInterface {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CustomResourceDefinitions")
	ret0, _ := ret[0].(v11.CustomResourceDefinitionInterface)
	return ret0
}

// CustomResourceDefinitions indicates an expected call of CustomResourceDefinitions.
func (mr *MockApiextensionsV1InterfaceMockRecorder) CustomResourceDefinitions() *ApiextensionsV1InterfaceCustomResourceDefinitionsCall {
	mr.mock.ctrl.T.Helper()
	call := mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CustomResourceDefinitions", reflect.TypeOf((*MockApiextensionsV1Interface)(nil).CustomResourceDefinitions))
	return &ApiextensionsV1InterfaceCustomResourceDefinitionsCall{Call: call}
}

// ApiextensionsV1InterfaceCustomResourceDefinitionsCall wrap *gomock.Call
type ApiextensionsV1InterfaceCustomResourceDefinitionsCall struct {
	*gomock.Call
}

// Return rewrite *gomock.Call.Return
func (c *ApiextensionsV1InterfaceCustomResourceDefinitionsCall) Return(arg0 v11.CustomResourceDefinitionInterface) *ApiextensionsV1InterfaceCustomResourceDefinitionsCall {
	c.Call = c.Call.Return(arg0)
	return c
}

// Do rewrite *gomock.Call.Do
func (c *ApiextensionsV1InterfaceCustomResourceDefinitionsCall) Do(f func() v11.CustomResourceDefinitionInterface) *ApiextensionsV1InterfaceCustomResourceDefinitionsCall {
	c.Call = c.Call.Do(f)
	return c
}

// DoAndReturn rewrite *gomock.Call.DoAndReturn
func (c *ApiextensionsV1InterfaceCustomResourceDefinitionsCall) DoAndReturn(f func() v11.CustomResourceDefinitionInterface) *ApiextensionsV1InterfaceCustomResourceDefinitionsCall {
	c.Call = c.Call.DoAndReturn(f)
	return c
}

// RESTClient mocks base method.
func (m *MockApiextensionsV1Interface) RESTClient() rest.Interface {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RESTClient")
	ret0, _ := ret[0].(rest.Interface)
	return ret0
}

// RESTClient indicates an expected call of RESTClient.
func (mr *MockApiextensionsV1InterfaceMockRecorder) RESTClient() *ApiextensionsV1InterfaceRESTClientCall {
	mr.mock.ctrl.T.Helper()
	call := mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RESTClient", reflect.TypeOf((*MockApiextensionsV1Interface)(nil).RESTClient))
	return &ApiextensionsV1InterfaceRESTClientCall{Call: call}
}

// ApiextensionsV1InterfaceRESTClientCall wrap *gomock.Call
type ApiextensionsV1InterfaceRESTClientCall struct {
	*gomock.Call
}

// Return rewrite *gomock.Call.Return
func (c *ApiextensionsV1InterfaceRESTClientCall) Return(arg0 rest.Interface) *ApiextensionsV1InterfaceRESTClientCall {
	c.Call = c.Call.Return(arg0)
	return c
}

// Do rewrite *gomock.Call.Do
func (c *ApiextensionsV1InterfaceRESTClientCall) Do(f func() rest.Interface) *ApiextensionsV1InterfaceRESTClientCall {
	c.Call = c.Call.Do(f)
	return c
}

// DoAndReturn rewrite *gomock.Call.DoAndReturn
func (c *ApiextensionsV1InterfaceRESTClientCall) DoAndReturn(f func() rest.Interface) *ApiextensionsV1InterfaceRESTClientCall {
	c.Call = c.Call.DoAndReturn(f)
	return c
}

// MockCustomResourceDefinitionInterface is a mock of CustomResourceDefinitionInterface interface.
type MockCustomResourceDefinitionInterface struct {
	ctrl     *gomock.Controller
	recorder *MockCustomResourceDefinitionInterfaceMockRecorder
}

// MockCustomResourceDefinitionInterfaceMockRecorder is the mock recorder for MockCustomResourceDefinitionInterface.
type MockCustomResourceDefinitionInterfaceMockRecorder struct {
	mock *MockCustomResourceDefinitionInterface
}

// NewMockCustomResourceDefinitionInterface creates a new mock instance.
func NewMockCustomResourceDefinitionInterface(ctrl *gomock.Controller) *MockCustomResourceDefinitionInterface {
	mock := &MockCustomResourceDefinitionInterface{ctrl: ctrl}
	mock.recorder = &MockCustomResourceDefinitionInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCustomResourceDefinitionInterface) EXPECT() *MockCustomResourceDefinitionInterfaceMockRecorder {
	return m.recorder
}

// Apply mocks base method.
func (m *MockCustomResourceDefinitionInterface) Apply(arg0 context.Context, arg1 *v10.CustomResourceDefinitionApplyConfiguration, arg2 v12.ApplyOptions) (*v1.CustomResourceDefinition, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Apply", arg0, arg1, arg2)
	ret0, _ := ret[0].(*v1.CustomResourceDefinition)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Apply indicates an expected call of Apply.
func (mr *MockCustomResourceDefinitionInterfaceMockRecorder) Apply(arg0, arg1, arg2 any) *CustomResourceDefinitionInterfaceApplyCall {
	mr.mock.ctrl.T.Helper()
	call := mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Apply", reflect.TypeOf((*MockCustomResourceDefinitionInterface)(nil).Apply), arg0, arg1, arg2)
	return &CustomResourceDefinitionInterfaceApplyCall{Call: call}
}

// CustomResourceDefinitionInterfaceApplyCall wrap *gomock.Call
type CustomResourceDefinitionInterfaceApplyCall struct {
	*gomock.Call
}

// Return rewrite *gomock.Call.Return
func (c *CustomResourceDefinitionInterfaceApplyCall) Return(arg0 *v1.CustomResourceDefinition, arg1 error) *CustomResourceDefinitionInterfaceApplyCall {
	c.Call = c.Call.Return(arg0, arg1)
	return c
}

// Do rewrite *gomock.Call.Do
func (c *CustomResourceDefinitionInterfaceApplyCall) Do(f func(context.Context, *v10.CustomResourceDefinitionApplyConfiguration, v12.ApplyOptions) (*v1.CustomResourceDefinition, error)) *CustomResourceDefinitionInterfaceApplyCall {
	c.Call = c.Call.Do(f)
	return c
}

// DoAndReturn rewrite *gomock.Call.DoAndReturn
func (c *CustomResourceDefinitionInterfaceApplyCall) DoAndReturn(f func(context.Context, *v10.CustomResourceDefinitionApplyConfiguration, v12.ApplyOptions) (*v1.CustomResourceDefinition, error)) *CustomResourceDefinitionInterfaceApplyCall {
	c.Call = c.Call.DoAndReturn(f)
	return c
}

// ApplyStatus mocks base method.
func (m *MockCustomResourceDefinitionInterface) ApplyStatus(arg0 context.Context, arg1 *v10.CustomResourceDefinitionApplyConfiguration, arg2 v12.ApplyOptions) (*v1.CustomResourceDefinition, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ApplyStatus", arg0, arg1, arg2)
	ret0, _ := ret[0].(*v1.CustomResourceDefinition)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ApplyStatus indicates an expected call of ApplyStatus.
func (mr *MockCustomResourceDefinitionInterfaceMockRecorder) ApplyStatus(arg0, arg1, arg2 any) *CustomResourceDefinitionInterfaceApplyStatusCall {
	mr.mock.ctrl.T.Helper()
	call := mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ApplyStatus", reflect.TypeOf((*MockCustomResourceDefinitionInterface)(nil).ApplyStatus), arg0, arg1, arg2)
	return &CustomResourceDefinitionInterfaceApplyStatusCall{Call: call}
}

// CustomResourceDefinitionInterfaceApplyStatusCall wrap *gomock.Call
type CustomResourceDefinitionInterfaceApplyStatusCall struct {
	*gomock.Call
}

// Return rewrite *gomock.Call.Return
func (c *CustomResourceDefinitionInterfaceApplyStatusCall) Return(arg0 *v1.CustomResourceDefinition, arg1 error) *CustomResourceDefinitionInterfaceApplyStatusCall {
	c.Call = c.Call.Return(arg0, arg1)
	return c
}

// Do rewrite *gomock.Call.Do
func (c *CustomResourceDefinitionInterfaceApplyStatusCall) Do(f func(context.Context, *v10.CustomResourceDefinitionApplyConfiguration, v12.ApplyOptions) (*v1.CustomResourceDefinition, error)) *CustomResourceDefinitionInterfaceApplyStatusCall {
	c.Call = c.Call.Do(f)
	return c
}

// DoAndReturn rewrite *gomock.Call.DoAndReturn
func (c *CustomResourceDefinitionInterfaceApplyStatusCall) DoAndReturn(f func(context.Context, *v10.CustomResourceDefinitionApplyConfiguration, v12.ApplyOptions) (*v1.CustomResourceDefinition, error)) *CustomResourceDefinitionInterfaceApplyStatusCall {
	c.Call = c.Call.DoAndReturn(f)
	return c
}

// Create mocks base method.
func (m *MockCustomResourceDefinitionInterface) Create(arg0 context.Context, arg1 *v1.CustomResourceDefinition, arg2 v12.CreateOptions) (*v1.CustomResourceDefinition, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", arg0, arg1, arg2)
	ret0, _ := ret[0].(*v1.CustomResourceDefinition)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Create indicates an expected call of Create.
func (mr *MockCustomResourceDefinitionInterfaceMockRecorder) Create(arg0, arg1, arg2 any) *CustomResourceDefinitionInterfaceCreateCall {
	mr.mock.ctrl.T.Helper()
	call := mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockCustomResourceDefinitionInterface)(nil).Create), arg0, arg1, arg2)
	return &CustomResourceDefinitionInterfaceCreateCall{Call: call}
}

// CustomResourceDefinitionInterfaceCreateCall wrap *gomock.Call
type CustomResourceDefinitionInterfaceCreateCall struct {
	*gomock.Call
}

// Return rewrite *gomock.Call.Return
func (c *CustomResourceDefinitionInterfaceCreateCall) Return(arg0 *v1.CustomResourceDefinition, arg1 error) *CustomResourceDefinitionInterfaceCreateCall {
	c.Call = c.Call.Return(arg0, arg1)
	return c
}

// Do rewrite *gomock.Call.Do
func (c *CustomResourceDefinitionInterfaceCreateCall) Do(f func(context.Context, *v1.CustomResourceDefinition, v12.CreateOptions) (*v1.CustomResourceDefinition, error)) *CustomResourceDefinitionInterfaceCreateCall {
	c.Call = c.Call.Do(f)
	return c
}

// DoAndReturn rewrite *gomock.Call.DoAndReturn
func (c *CustomResourceDefinitionInterfaceCreateCall) DoAndReturn(f func(context.Context, *v1.CustomResourceDefinition, v12.CreateOptions) (*v1.CustomResourceDefinition, error)) *CustomResourceDefinitionInterfaceCreateCall {
	c.Call = c.Call.DoAndReturn(f)
	return c
}

// Delete mocks base method.
func (m *MockCustomResourceDefinitionInterface) Delete(arg0 context.Context, arg1 string, arg2 v12.DeleteOptions) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Delete", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// Delete indicates an expected call of Delete.
func (mr *MockCustomResourceDefinitionInterfaceMockRecorder) Delete(arg0, arg1, arg2 any) *CustomResourceDefinitionInterfaceDeleteCall {
	mr.mock.ctrl.T.Helper()
	call := mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Delete", reflect.TypeOf((*MockCustomResourceDefinitionInterface)(nil).Delete), arg0, arg1, arg2)
	return &CustomResourceDefinitionInterfaceDeleteCall{Call: call}
}

// CustomResourceDefinitionInterfaceDeleteCall wrap *gomock.Call
type CustomResourceDefinitionInterfaceDeleteCall struct {
	*gomock.Call
}

// Return rewrite *gomock.Call.Return
func (c *CustomResourceDefinitionInterfaceDeleteCall) Return(arg0 error) *CustomResourceDefinitionInterfaceDeleteCall {
	c.Call = c.Call.Return(arg0)
	return c
}

// Do rewrite *gomock.Call.Do
func (c *CustomResourceDefinitionInterfaceDeleteCall) Do(f func(context.Context, string, v12.DeleteOptions) error) *CustomResourceDefinitionInterfaceDeleteCall {
	c.Call = c.Call.Do(f)
	return c
}

// DoAndReturn rewrite *gomock.Call.DoAndReturn
func (c *CustomResourceDefinitionInterfaceDeleteCall) DoAndReturn(f func(context.Context, string, v12.DeleteOptions) error) *CustomResourceDefinitionInterfaceDeleteCall {
	c.Call = c.Call.DoAndReturn(f)
	return c
}

// DeleteCollection mocks base method.
func (m *MockCustomResourceDefinitionInterface) DeleteCollection(arg0 context.Context, arg1 v12.DeleteOptions, arg2 v12.ListOptions) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteCollection", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteCollection indicates an expected call of DeleteCollection.
func (mr *MockCustomResourceDefinitionInterfaceMockRecorder) DeleteCollection(arg0, arg1, arg2 any) *CustomResourceDefinitionInterfaceDeleteCollectionCall {
	mr.mock.ctrl.T.Helper()
	call := mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteCollection", reflect.TypeOf((*MockCustomResourceDefinitionInterface)(nil).DeleteCollection), arg0, arg1, arg2)
	return &CustomResourceDefinitionInterfaceDeleteCollectionCall{Call: call}
}

// CustomResourceDefinitionInterfaceDeleteCollectionCall wrap *gomock.Call
type CustomResourceDefinitionInterfaceDeleteCollectionCall struct {
	*gomock.Call
}

// Return rewrite *gomock.Call.Return
func (c *CustomResourceDefinitionInterfaceDeleteCollectionCall) Return(arg0 error) *CustomResourceDefinitionInterfaceDeleteCollectionCall {
	c.Call = c.Call.Return(arg0)
	return c
}

// Do rewrite *gomock.Call.Do
func (c *CustomResourceDefinitionInterfaceDeleteCollectionCall) Do(f func(context.Context, v12.DeleteOptions, v12.ListOptions) error) *CustomResourceDefinitionInterfaceDeleteCollectionCall {
	c.Call = c.Call.Do(f)
	return c
}

// DoAndReturn rewrite *gomock.Call.DoAndReturn
func (c *CustomResourceDefinitionInterfaceDeleteCollectionCall) DoAndReturn(f func(context.Context, v12.DeleteOptions, v12.ListOptions) error) *CustomResourceDefinitionInterfaceDeleteCollectionCall {
	c.Call = c.Call.DoAndReturn(f)
	return c
}

// Get mocks base method.
func (m *MockCustomResourceDefinitionInterface) Get(arg0 context.Context, arg1 string, arg2 v12.GetOptions) (*v1.CustomResourceDefinition, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", arg0, arg1, arg2)
	ret0, _ := ret[0].(*v1.CustomResourceDefinition)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockCustomResourceDefinitionInterfaceMockRecorder) Get(arg0, arg1, arg2 any) *CustomResourceDefinitionInterfaceGetCall {
	mr.mock.ctrl.T.Helper()
	call := mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockCustomResourceDefinitionInterface)(nil).Get), arg0, arg1, arg2)
	return &CustomResourceDefinitionInterfaceGetCall{Call: call}
}

// CustomResourceDefinitionInterfaceGetCall wrap *gomock.Call
type CustomResourceDefinitionInterfaceGetCall struct {
	*gomock.Call
}

// Return rewrite *gomock.Call.Return
func (c *CustomResourceDefinitionInterfaceGetCall) Return(arg0 *v1.CustomResourceDefinition, arg1 error) *CustomResourceDefinitionInterfaceGetCall {
	c.Call = c.Call.Return(arg0, arg1)
	return c
}

// Do rewrite *gomock.Call.Do
func (c *CustomResourceDefinitionInterfaceGetCall) Do(f func(context.Context, string, v12.GetOptions) (*v1.CustomResourceDefinition, error)) *CustomResourceDefinitionInterfaceGetCall {
	c.Call = c.Call.Do(f)
	return c
}

// DoAndReturn rewrite *gomock.Call.DoAndReturn
func (c *CustomResourceDefinitionInterfaceGetCall) DoAndReturn(f func(context.Context, string, v12.GetOptions) (*v1.CustomResourceDefinition, error)) *CustomResourceDefinitionInterfaceGetCall {
	c.Call = c.Call.DoAndReturn(f)
	return c
}

// List mocks base method.
func (m *MockCustomResourceDefinitionInterface) List(arg0 context.Context, arg1 v12.ListOptions) (*v1.CustomResourceDefinitionList, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "List", arg0, arg1)
	ret0, _ := ret[0].(*v1.CustomResourceDefinitionList)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// List indicates an expected call of List.
func (mr *MockCustomResourceDefinitionInterfaceMockRecorder) List(arg0, arg1 any) *CustomResourceDefinitionInterfaceListCall {
	mr.mock.ctrl.T.Helper()
	call := mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "List", reflect.TypeOf((*MockCustomResourceDefinitionInterface)(nil).List), arg0, arg1)
	return &CustomResourceDefinitionInterfaceListCall{Call: call}
}

// CustomResourceDefinitionInterfaceListCall wrap *gomock.Call
type CustomResourceDefinitionInterfaceListCall struct {
	*gomock.Call
}

// Return rewrite *gomock.Call.Return
func (c *CustomResourceDefinitionInterfaceListCall) Return(arg0 *v1.CustomResourceDefinitionList, arg1 error) *CustomResourceDefinitionInterfaceListCall {
	c.Call = c.Call.Return(arg0, arg1)
	return c
}

// Do rewrite *gomock.Call.Do
func (c *CustomResourceDefinitionInterfaceListCall) Do(f func(context.Context, v12.ListOptions) (*v1.CustomResourceDefinitionList, error)) *CustomResourceDefinitionInterfaceListCall {
	c.Call = c.Call.Do(f)
	return c
}

// DoAndReturn rewrite *gomock.Call.DoAndReturn
func (c *CustomResourceDefinitionInterfaceListCall) DoAndReturn(f func(context.Context, v12.ListOptions) (*v1.CustomResourceDefinitionList, error)) *CustomResourceDefinitionInterfaceListCall {
	c.Call = c.Call.DoAndReturn(f)
	return c
}

// Patch mocks base method.
func (m *MockCustomResourceDefinitionInterface) Patch(arg0 context.Context, arg1 string, arg2 types.PatchType, arg3 []byte, arg4 v12.PatchOptions, arg5 ...string) (*v1.CustomResourceDefinition, error) {
	m.ctrl.T.Helper()
	varargs := []any{arg0, arg1, arg2, arg3, arg4}
	for _, a := range arg5 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "Patch", varargs...)
	ret0, _ := ret[0].(*v1.CustomResourceDefinition)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Patch indicates an expected call of Patch.
func (mr *MockCustomResourceDefinitionInterfaceMockRecorder) Patch(arg0, arg1, arg2, arg3, arg4 any, arg5 ...any) *CustomResourceDefinitionInterfacePatchCall {
	mr.mock.ctrl.T.Helper()
	varargs := append([]any{arg0, arg1, arg2, arg3, arg4}, arg5...)
	call := mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Patch", reflect.TypeOf((*MockCustomResourceDefinitionInterface)(nil).Patch), varargs...)
	return &CustomResourceDefinitionInterfacePatchCall{Call: call}
}

// CustomResourceDefinitionInterfacePatchCall wrap *gomock.Call
type CustomResourceDefinitionInterfacePatchCall struct {
	*gomock.Call
}

// Return rewrite *gomock.Call.Return
func (c *CustomResourceDefinitionInterfacePatchCall) Return(arg0 *v1.CustomResourceDefinition, arg1 error) *CustomResourceDefinitionInterfacePatchCall {
	c.Call = c.Call.Return(arg0, arg1)
	return c
}

// Do rewrite *gomock.Call.Do
func (c *CustomResourceDefinitionInterfacePatchCall) Do(f func(context.Context, string, types.PatchType, []byte, v12.PatchOptions, ...string) (*v1.CustomResourceDefinition, error)) *CustomResourceDefinitionInterfacePatchCall {
	c.Call = c.Call.Do(f)
	return c
}

// DoAndReturn rewrite *gomock.Call.DoAndReturn
func (c *CustomResourceDefinitionInterfacePatchCall) DoAndReturn(f func(context.Context, string, types.PatchType, []byte, v12.PatchOptions, ...string) (*v1.CustomResourceDefinition, error)) *CustomResourceDefinitionInterfacePatchCall {
	c.Call = c.Call.DoAndReturn(f)
	return c
}

// Update mocks base method.
func (m *MockCustomResourceDefinitionInterface) Update(arg0 context.Context, arg1 *v1.CustomResourceDefinition, arg2 v12.UpdateOptions) (*v1.CustomResourceDefinition, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Update", arg0, arg1, arg2)
	ret0, _ := ret[0].(*v1.CustomResourceDefinition)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Update indicates an expected call of Update.
func (mr *MockCustomResourceDefinitionInterfaceMockRecorder) Update(arg0, arg1, arg2 any) *CustomResourceDefinitionInterfaceUpdateCall {
	mr.mock.ctrl.T.Helper()
	call := mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Update", reflect.TypeOf((*MockCustomResourceDefinitionInterface)(nil).Update), arg0, arg1, arg2)
	return &CustomResourceDefinitionInterfaceUpdateCall{Call: call}
}

// CustomResourceDefinitionInterfaceUpdateCall wrap *gomock.Call
type CustomResourceDefinitionInterfaceUpdateCall struct {
	*gomock.Call
}

// Return rewrite *gomock.Call.Return
func (c *CustomResourceDefinitionInterfaceUpdateCall) Return(arg0 *v1.CustomResourceDefinition, arg1 error) *CustomResourceDefinitionInterfaceUpdateCall {
	c.Call = c.Call.Return(arg0, arg1)
	return c
}

// Do rewrite *gomock.Call.Do
func (c *CustomResourceDefinitionInterfaceUpdateCall) Do(f func(context.Context, *v1.CustomResourceDefinition, v12.UpdateOptions) (*v1.CustomResourceDefinition, error)) *CustomResourceDefinitionInterfaceUpdateCall {
	c.Call = c.Call.Do(f)
	return c
}

// DoAndReturn rewrite *gomock.Call.DoAndReturn
func (c *CustomResourceDefinitionInterfaceUpdateCall) DoAndReturn(f func(context.Context, *v1.CustomResourceDefinition, v12.UpdateOptions) (*v1.CustomResourceDefinition, error)) *CustomResourceDefinitionInterfaceUpdateCall {
	c.Call = c.Call.DoAndReturn(f)
	return c
}

// UpdateStatus mocks base method.
func (m *MockCustomResourceDefinitionInterface) UpdateStatus(arg0 context.Context, arg1 *v1.CustomResourceDefinition, arg2 v12.UpdateOptions) (*v1.CustomResourceDefinition, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateStatus", arg0, arg1, arg2)
	ret0, _ := ret[0].(*v1.CustomResourceDefinition)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UpdateStatus indicates an expected call of UpdateStatus.
func (mr *MockCustomResourceDefinitionInterfaceMockRecorder) UpdateStatus(arg0, arg1, arg2 any) *CustomResourceDefinitionInterfaceUpdateStatusCall {
	mr.mock.ctrl.T.Helper()
	call := mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateStatus", reflect.TypeOf((*MockCustomResourceDefinitionInterface)(nil).UpdateStatus), arg0, arg1, arg2)
	return &CustomResourceDefinitionInterfaceUpdateStatusCall{Call: call}
}

// CustomResourceDefinitionInterfaceUpdateStatusCall wrap *gomock.Call
type CustomResourceDefinitionInterfaceUpdateStatusCall struct {
	*gomock.Call
}

// Return rewrite *gomock.Call.Return
func (c *CustomResourceDefinitionInterfaceUpdateStatusCall) Return(arg0 *v1.CustomResourceDefinition, arg1 error) *CustomResourceDefinitionInterfaceUpdateStatusCall {
	c.Call = c.Call.Return(arg0, arg1)
	return c
}

// Do rewrite *gomock.Call.Do
func (c *CustomResourceDefinitionInterfaceUpdateStatusCall) Do(f func(context.Context, *v1.CustomResourceDefinition, v12.UpdateOptions) (*v1.CustomResourceDefinition, error)) *CustomResourceDefinitionInterfaceUpdateStatusCall {
	c.Call = c.Call.Do(f)
	return c
}

// DoAndReturn rewrite *gomock.Call.DoAndReturn
func (c *CustomResourceDefinitionInterfaceUpdateStatusCall) DoAndReturn(f func(context.Context, *v1.CustomResourceDefinition, v12.UpdateOptions) (*v1.CustomResourceDefinition, error)) *CustomResourceDefinitionInterfaceUpdateStatusCall {
	c.Call = c.Call.DoAndReturn(f)
	return c
}

// Watch mocks base method.
func (m *MockCustomResourceDefinitionInterface) Watch(arg0 context.Context, arg1 v12.ListOptions) (watch.Interface, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Watch", arg0, arg1)
	ret0, _ := ret[0].(watch.Interface)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Watch indicates an expected call of Watch.
func (mr *MockCustomResourceDefinitionInterfaceMockRecorder) Watch(arg0, arg1 any) *CustomResourceDefinitionInterfaceWatchCall {
	mr.mock.ctrl.T.Helper()
	call := mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Watch", reflect.TypeOf((*MockCustomResourceDefinitionInterface)(nil).Watch), arg0, arg1)
	return &CustomResourceDefinitionInterfaceWatchCall{Call: call}
}

// CustomResourceDefinitionInterfaceWatchCall wrap *gomock.Call
type CustomResourceDefinitionInterfaceWatchCall struct {
	*gomock.Call
}

// Return rewrite *gomock.Call.Return
func (c *CustomResourceDefinitionInterfaceWatchCall) Return(arg0 watch.Interface, arg1 error) *CustomResourceDefinitionInterfaceWatchCall {
	c.Call = c.Call.Return(arg0, arg1)
	return c
}

// Do rewrite *gomock.Call.Do
func (c *CustomResourceDefinitionInterfaceWatchCall) Do(f func(context.Context, v12.ListOptions) (watch.Interface, error)) *CustomResourceDefinitionInterfaceWatchCall {
	c.Call = c.Call.Do(f)
	return c
}

// DoAndReturn rewrite *gomock.Call.DoAndReturn
func (c *CustomResourceDefinitionInterfaceWatchCall) DoAndReturn(f func(context.Context, v12.ListOptions) (watch.Interface, error)) *CustomResourceDefinitionInterfaceWatchCall {
	c.Call = c.Call.DoAndReturn(f)
	return c
}
